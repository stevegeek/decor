<% klass = Class.new(::Decor::Tables::DataTableBuilder) do
  def pagination_options
    {path: "#"}
  end
end
dt = klass.new(
  params: params,
  helpers: self,
  title: title,
  alternating: alternating,
  hover_highlight: hover_highlight,
  header_height: header_height,
  row_height: row_height,
  rows_selectable_as_name: rows_selectable_as_name&.to_sym,
  paginated: paginated,
  query: ::ApplicationCollectionBackedQuery.wrap((1..10).to_a).new,
  size: size,
  color: color,
  style: style
) do |dt|
  dt.column(:id, numeric: true) { |item| item }
  dt.column(:name, stretch: true, sortable: true) { |item| "Item #{item}" }
  dt.column(:value, numeric: true, sortable: true) { (Random.rand * 100).round(2) }
  dt.column(:status, emphasis: :low) { ["Active", "Pending", "Complete"].sample }
end %>
<%= render dt %>
